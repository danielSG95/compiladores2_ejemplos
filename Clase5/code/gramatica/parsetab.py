
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEMODULErightUMENOSAND ASIG COLON CONSOLE CONST DIFF DIVIDE DOT ID IGUAL LOG LPAREN MAYOR MAYORI MENOR MENORI MINUS MODULE NOT NUMBER OR PLUS RPAREN SEMICOLON STRING TIMES TNUMBER TSTRING VAR init : instrucciones instrucciones : instrucciones instruccion\n    \t\t\t\t| instruccion instruccion : instruccion_inline  instruccion_inline : print\n                          | declare\n                          | asignacion  print : CONSOLE DOT LOG LPAREN expresion_logica RPAREN SEMICOLON declare : tipo_declaracion ID COLON tipo_dato ASIG expresion_logica SEMICOLON asignacion : ID ASIG expresion_logica SEMICOLON tipo_declaracion : CONST\n    \t\t\t\t\t| VAR expresion_logica : expresion_relacional AND expresion_relacional\n                        | expresion_relacional OR expresion_relacional\n                        | NOT expresion_relacional\n                        | expresion_relacional expresion_relacional : expresion_numerica MAYOR expresion_numerica\n                            | expresion_numerica MENOR expresion_numerica\n                            | expresion_numerica MAYORI expresion_numerica\n                            | expresion_numerica MENORI expresion_numerica\n                            | expresion_numerica IGUAL expresion_numerica\n                            | expresion_numerica DIFF expresion_numerica\n                            | expresion_numerica expresion_numerica : MINUS expresion_numerica %prec UMENOS\n    \t\t\t| expresion_numerica PLUS expresion_numerica\n    \t\t\t| expresion_numerica MINUS expresion_numerica\n\t\t\t\t| expresion_numerica TIMES expresion_numerica\n\t\t\t\t| expresion_numerica DIVIDE expresion_numerica\n\t\t\t\t| expresion_numerica MODULE expresion_numerica\n       \t\t    | terminal terminal : TNUMBER\n    \t\t\t| TSTRING\n       \t\t    | ID tipo_dato : STRING\n                | NUMBER\n                | emptyempty :'
    
_lr_action_items = {'CONSOLE':([0,2,3,4,5,6,7,13,33,66,67,],[8,8,-3,-4,-5,-6,-7,-2,-10,-8,-9,]),'ID':([0,2,3,4,5,6,7,9,11,12,13,16,22,24,28,33,34,35,37,38,39,40,41,42,43,44,45,46,47,50,66,67,],[10,10,-3,-4,-5,-6,-7,15,-11,-12,-2,19,19,19,19,-10,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-8,-9,]),'CONST':([0,2,3,4,5,6,7,13,33,66,67,],[11,11,-3,-4,-5,-6,-7,-2,-10,-8,-9,]),'VAR':([0,2,3,4,5,6,7,13,33,66,67,],[12,12,-3,-4,-5,-6,-7,-2,-10,-8,-9,]),'$end':([1,2,3,4,5,6,7,13,33,66,67,],[0,-1,-3,-4,-5,-6,-7,-2,-10,-8,-9,]),'DOT':([8,],[14,]),'ASIG':([10,18,29,30,31,32,],[16,-37,50,-34,-35,-36,]),'LOG':([14,],[17,]),'COLON':([15,],[18,]),'NOT':([16,28,50,],[22,22,22,]),'MINUS':([16,19,22,23,24,25,26,27,28,34,35,37,38,39,40,41,42,43,44,45,46,47,48,50,53,54,55,56,57,58,59,60,61,62,63,],[24,-33,24,44,24,-30,-31,-32,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-24,24,44,44,44,44,44,44,-25,-26,-27,-28,-29,]),'TNUMBER':([16,22,24,28,34,35,37,38,39,40,41,42,43,44,45,46,47,50,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'TSTRING':([16,22,24,28,34,35,37,38,39,40,41,42,43,44,45,46,47,50,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'LPAREN':([17,],[28,]),'STRING':([18,],[30,]),'NUMBER':([18,],[31,]),'MAYOR':([19,23,25,26,27,48,59,60,61,62,63,],[-33,37,-30,-31,-32,-24,-25,-26,-27,-28,-29,]),'MENOR':([19,23,25,26,27,48,59,60,61,62,63,],[-33,38,-30,-31,-32,-24,-25,-26,-27,-28,-29,]),'MAYORI':([19,23,25,26,27,48,59,60,61,62,63,],[-33,39,-30,-31,-32,-24,-25,-26,-27,-28,-29,]),'MENORI':([19,23,25,26,27,48,59,60,61,62,63,],[-33,40,-30,-31,-32,-24,-25,-26,-27,-28,-29,]),'IGUAL':([19,23,25,26,27,48,59,60,61,62,63,],[-33,41,-30,-31,-32,-24,-25,-26,-27,-28,-29,]),'DIFF':([19,23,25,26,27,48,59,60,61,62,63,],[-33,42,-30,-31,-32,-24,-25,-26,-27,-28,-29,]),'PLUS':([19,23,25,26,27,48,53,54,55,56,57,58,59,60,61,62,63,],[-33,43,-30,-31,-32,-24,43,43,43,43,43,43,-25,-26,-27,-28,-29,]),'TIMES':([19,23,25,26,27,48,53,54,55,56,57,58,59,60,61,62,63,],[-33,45,-30,-31,-32,-24,45,45,45,45,45,45,45,45,-27,-28,-29,]),'DIVIDE':([19,23,25,26,27,48,53,54,55,56,57,58,59,60,61,62,63,],[-33,46,-30,-31,-32,-24,46,46,46,46,46,46,46,46,-27,-28,-29,]),'MODULE':([19,23,25,26,27,48,53,54,55,56,57,58,59,60,61,62,63,],[-33,47,-30,-31,-32,-24,47,47,47,47,47,47,47,47,-27,-28,-29,]),'AND':([19,21,23,25,26,27,48,53,54,55,56,57,58,59,60,61,62,63,],[-33,34,-23,-30,-31,-32,-24,-17,-18,-19,-20,-21,-22,-25,-26,-27,-28,-29,]),'OR':([19,21,23,25,26,27,48,53,54,55,56,57,58,59,60,61,62,63,],[-33,35,-23,-30,-31,-32,-24,-17,-18,-19,-20,-21,-22,-25,-26,-27,-28,-29,]),'SEMICOLON':([19,20,21,23,25,26,27,36,48,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,],[-33,33,-16,-23,-30,-31,-32,-15,-24,-13,-14,-17,-18,-19,-20,-21,-22,-25,-26,-27,-28,-29,66,67,]),'RPAREN':([19,21,23,25,26,27,36,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,],[-33,-16,-23,-30,-31,-32,-15,-24,64,-13,-14,-17,-18,-19,-20,-21,-22,-25,-26,-27,-28,-29,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones':([0,],[2,]),'instruccion':([0,2,],[3,13,]),'instruccion_inline':([0,2,],[4,4,]),'print':([0,2,],[5,5,]),'declare':([0,2,],[6,6,]),'asignacion':([0,2,],[7,7,]),'tipo_declaracion':([0,2,],[9,9,]),'expresion_logica':([16,28,50,],[20,49,65,]),'expresion_relacional':([16,22,28,34,35,50,],[21,36,21,51,52,21,]),'expresion_numerica':([16,22,24,28,34,35,37,38,39,40,41,42,43,44,45,46,47,50,],[23,23,48,23,23,23,53,54,55,56,57,58,59,60,61,62,63,23,]),'terminal':([16,22,24,28,34,35,37,38,39,40,41,42,43,44,45,46,47,50,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'tipo_dato':([18,],[29,]),'empty':([18,],[32,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instrucciones','init',1,'p_init','gramatica.py',139),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones','gramatica.py',144),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones','gramatica.py',145),
  ('instruccion -> instruccion_inline','instruccion',1,'p_instruccion','gramatica.py',154),
  ('instruccion_inline -> print','instruccion_inline',1,'p_instruccion_inline','gramatica.py',159),
  ('instruccion_inline -> declare','instruccion_inline',1,'p_instruccion_inline','gramatica.py',160),
  ('instruccion_inline -> asignacion','instruccion_inline',1,'p_instruccion_inline','gramatica.py',161),
  ('print -> CONSOLE DOT LOG LPAREN expresion_logica RPAREN SEMICOLON','print',7,'p_print','gramatica.py',166),
  ('declare -> tipo_declaracion ID COLON tipo_dato ASIG expresion_logica SEMICOLON','declare',7,'p_declare','gramatica.py',172),
  ('asignacion -> ID ASIG expresion_logica SEMICOLON','asignacion',4,'p_asignacion','gramatica.py',176),
  ('tipo_declaracion -> CONST','tipo_declaracion',1,'p_tipo_declaracion','gramatica.py',180),
  ('tipo_declaracion -> VAR','tipo_declaracion',1,'p_tipo_declaracion','gramatica.py',181),
  ('expresion_logica -> expresion_relacional AND expresion_relacional','expresion_logica',3,'p_expresion_logica','gramatica.py',189),
  ('expresion_logica -> expresion_relacional OR expresion_relacional','expresion_logica',3,'p_expresion_logica','gramatica.py',190),
  ('expresion_logica -> NOT expresion_relacional','expresion_logica',2,'p_expresion_logica','gramatica.py',191),
  ('expresion_logica -> expresion_relacional','expresion_logica',1,'p_expresion_logica','gramatica.py',192),
  ('expresion_relacional -> expresion_numerica MAYOR expresion_numerica','expresion_relacional',3,'p_expresion_relacional','gramatica.py',202),
  ('expresion_relacional -> expresion_numerica MENOR expresion_numerica','expresion_relacional',3,'p_expresion_relacional','gramatica.py',203),
  ('expresion_relacional -> expresion_numerica MAYORI expresion_numerica','expresion_relacional',3,'p_expresion_relacional','gramatica.py',204),
  ('expresion_relacional -> expresion_numerica MENORI expresion_numerica','expresion_relacional',3,'p_expresion_relacional','gramatica.py',205),
  ('expresion_relacional -> expresion_numerica IGUAL expresion_numerica','expresion_relacional',3,'p_expresion_relacional','gramatica.py',206),
  ('expresion_relacional -> expresion_numerica DIFF expresion_numerica','expresion_relacional',3,'p_expresion_relacional','gramatica.py',207),
  ('expresion_relacional -> expresion_numerica','expresion_relacional',1,'p_expresion_relacional','gramatica.py',208),
  ('expresion_numerica -> MINUS expresion_numerica','expresion_numerica',2,'p_expresion','gramatica.py',216),
  ('expresion_numerica -> expresion_numerica PLUS expresion_numerica','expresion_numerica',3,'p_expresion','gramatica.py',217),
  ('expresion_numerica -> expresion_numerica MINUS expresion_numerica','expresion_numerica',3,'p_expresion','gramatica.py',218),
  ('expresion_numerica -> expresion_numerica TIMES expresion_numerica','expresion_numerica',3,'p_expresion','gramatica.py',219),
  ('expresion_numerica -> expresion_numerica DIVIDE expresion_numerica','expresion_numerica',3,'p_expresion','gramatica.py',220),
  ('expresion_numerica -> expresion_numerica MODULE expresion_numerica','expresion_numerica',3,'p_expresion','gramatica.py',221),
  ('expresion_numerica -> terminal','expresion_numerica',1,'p_expresion','gramatica.py',222),
  ('terminal -> TNUMBER','terminal',1,'p_terminal','gramatica.py',232),
  ('terminal -> TSTRING','terminal',1,'p_terminal','gramatica.py',233),
  ('terminal -> ID','terminal',1,'p_terminal','gramatica.py',234),
  ('tipo_dato -> STRING','tipo_dato',1,'p_tipo_dato','gramatica.py',246),
  ('tipo_dato -> NUMBER','tipo_dato',1,'p_tipo_dato','gramatica.py',247),
  ('tipo_dato -> empty','tipo_dato',1,'p_tipo_dato','gramatica.py',248),
  ('empty -> <empty>','empty',0,'p_empty','gramatica.py',258),
]
