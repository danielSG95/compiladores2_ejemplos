
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftSUMAMENOSleftPORDIVrightUMENOSCONSOLE CONST DIV ID IGUAL LOG MENOS NUMBER PARA PARC POR PUNTO SC STRING SUMA VARinstrucciones : instrucciones instruccion\n                     | instruccion instruccion : print\n                   | declaracionprint : CONSOLE PUNTO LOG PARA expresion PARC SCdeclaracion : tipo_var ID IGUAL expresion SCtipo_var : CONST\n                | VAR expresion : MENOS expresion %prec UMENOS\n                 | expresion SUMA expresion\n                 | expresion MENOS expresion\n                 | expresion POR expresion\n                 | expresion DIV expresion\n                 | datosdatos : NUMBER\n             | STRING '
    
_lr_action_items = {'CONSOLE':([0,1,2,3,4,9,21,32,],[5,5,-2,-3,-4,-1,-6,-5,]),'CONST':([0,1,2,3,4,9,21,32,],[7,7,-2,-3,-4,-1,-6,-5,]),'VAR':([0,1,2,3,4,9,21,32,],[8,8,-2,-3,-4,-1,-6,-5,]),'$end':([1,2,3,4,9,21,32,],[0,-2,-3,-4,-1,-6,-5,]),'PUNTO':([5,],[10,]),'ID':([6,7,8,],[11,-7,-8,]),'LOG':([10,],[12,]),'IGUAL':([11,],[13,]),'PARA':([12,],[14,]),'MENOS':([13,14,15,16,17,18,19,20,22,23,24,25,26,28,29,30,31,],[16,16,23,16,-14,-15,-16,23,16,16,16,16,-9,-10,-11,-12,-13,]),'NUMBER':([13,14,16,22,23,24,25,],[18,18,18,18,18,18,18,]),'STRING':([13,14,16,22,23,24,25,],[19,19,19,19,19,19,19,]),'SC':([15,17,18,19,26,27,28,29,30,31,],[21,-14,-15,-16,-9,32,-10,-11,-12,-13,]),'SUMA':([15,17,18,19,20,26,28,29,30,31,],[22,-14,-15,-16,22,-9,-10,-11,-12,-13,]),'POR':([15,17,18,19,20,26,28,29,30,31,],[24,-14,-15,-16,24,-9,24,24,-12,-13,]),'DIV':([15,17,18,19,20,26,28,29,30,31,],[25,-14,-15,-16,25,-9,25,25,-12,-13,]),'PARC':([17,18,19,20,26,28,29,30,31,],[-14,-15,-16,27,-9,-10,-11,-12,-13,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'instrucciones':([0,],[1,]),'instruccion':([0,1,],[2,9,]),'print':([0,1,],[3,3,]),'declaracion':([0,1,],[4,4,]),'tipo_var':([0,1,],[6,6,]),'expresion':([13,14,16,22,23,24,25,],[15,20,26,28,29,30,31,]),'datos':([13,14,16,22,23,24,25,],[17,17,17,17,17,17,17,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> instrucciones","S'",1,None,None,None),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones','gramatica.py',86),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones','gramatica.py',87),
  ('instruccion -> print','instruccion',1,'p_instruccion','gramatica.py',99),
  ('instruccion -> declaracion','instruccion',1,'p_instruccion','gramatica.py',100),
  ('print -> CONSOLE PUNTO LOG PARA expresion PARC SC','print',7,'p_print','gramatica.py',104),
  ('declaracion -> tipo_var ID IGUAL expresion SC','declaracion',5,'p_declaracion','gramatica.py',110),
  ('tipo_var -> CONST','tipo_var',1,'p_tipo_var','gramatica.py',115),
  ('tipo_var -> VAR','tipo_var',1,'p_tipo_var','gramatica.py',116),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion','gramatica.py',121),
  ('expresion -> expresion SUMA expresion','expresion',3,'p_expresion','gramatica.py',122),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion','gramatica.py',123),
  ('expresion -> expresion POR expresion','expresion',3,'p_expresion','gramatica.py',124),
  ('expresion -> expresion DIV expresion','expresion',3,'p_expresion','gramatica.py',125),
  ('expresion -> datos','expresion',1,'p_expresion','gramatica.py',126),
  ('datos -> NUMBER','datos',1,'p_datos','gramatica.py',144),
  ('datos -> STRING','datos',1,'p_datos','gramatica.py',145),
]
