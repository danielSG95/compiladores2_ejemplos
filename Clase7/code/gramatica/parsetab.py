
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEMODULErightUMENOSAND ASIG BOOLEAN COLON COMA CONSOLE CONST DIFF DIVIDE DOT ELSE FALSE FUNCTION ID IF IGUAL INTERFACE LLAVE_A LLAVE_C LOG LPAREN MAYOR MAYORI MENOR MENORI MINUS MODULE NOT NUMBER OR PLUS RETURN RPAREN SEMICOLON STRING TIMES TNUMBER TRUE TSTRING VAR WHILE init : instrucciones  instrucciones : instrucciones instruccion\n    \t\t\t\t| instruccion instruccion : instruccion_inline\n                    | instruccion_bloque\n                    | interface_definition  interface_definition : INTERFACE ID LLAVE_A interface_props SEMICOLON LLAVE_C interface_props : interface_props SEMICOLON ID COLON tipo_dato\n                        | ID COLON tipo_dato instruccion_inline : print\n                          | declare\n                          | asignacion\n                          | llamada SEMICOLON\n                          | retorno  retorno : RETURN expresion_logica SEMICOLON\n                | RETURN SEMICOLON print : CONSOLE DOT LOG LPAREN expresion_logica RPAREN SEMICOLON declare : tipo_declaracion ID COLON tipo_dato ASIG expresion_logica SEMICOLON asignacion : ID ASIG expresion_logica SEMICOLON tipo_declaracion : CONST\n    \t\t\t\t\t| VAR instruccion_bloque : instruccion_if\n                            | instruccion_while\n                            | declaracion_funcion instruccion_if : IF LPAREN expresion_logica RPAREN ifAux\n                        | IF LPAREN expresion_logica RPAREN ifAux ELSE instruccion_if\n                        | IF LPAREN expresion_logica RPAREN ifAux ELSE ifAux ifAux : LLAVE_A instrucciones LLAVE_C instruccion_while : WHILE  declaracion_funcion : FUNCTION ID LPAREN params RPAREN fretorno LLAVE_A instrucciones LLAVE_C  params : lparams\n                | empty  lparams : lparams COMA param\n                | param  param : expresion_logica COLON tipo_dato  fretorno : COLON tipo_dato\n                | empty  expresion_logica : expresion_relacional AND expresion_relacional\n                        | expresion_relacional OR expresion_relacional\n                        | NOT expresion_relacional\n                        | expresion_relacional expresion_relacional : expresion_numerica MAYOR expresion_numerica\n                            | expresion_numerica MENOR expresion_numerica\n                            | expresion_numerica MAYORI expresion_numerica\n                            | expresion_numerica MENORI expresion_numerica\n                            | expresion_numerica IGUAL expresion_numerica\n                            | expresion_numerica DIFF expresion_numerica\n                            | expresion_numerica expresion_numerica : MINUS expresion_numerica %prec UMENOS\n    \t\t\t| expresion_numerica PLUS expresion_numerica\n    \t\t\t| expresion_numerica MINUS expresion_numerica\n\t\t\t\t| expresion_numerica TIMES expresion_numerica\n\t\t\t\t| expresion_numerica DIVIDE expresion_numerica\n\t\t\t\t| expresion_numerica MODULE expresion_numerica\n       \t\t    | terminal terminal : TNUMBER\n    \t\t\t| TSTRING\n    \t\t\t| TRUE\n    \t\t\t| FALSE\n       \t\t    | ID\n       \t\t    | llamada\n       \t\t    | LLAVE_A lvalues LLAVE_C\n       \t\t    | ID DOT ID lvalues : lvalues COMA ID COLON expresion_logica\n                | ID COLON expresion_logica llamada : ID LPAREN args RPAREN args : lexpresiones\n            | empty  lexpresiones : lexpresiones COMA expresion_logica\n                    | expresion_logica  tipo_dato : STRING\n                | NUMBER\n                | BOOLEAN\n                | ID\n                | emptyempty :'
    
_lr_action_items = {'INTERFACE':([0,2,3,4,5,6,7,8,9,11,12,13,14,21,25,26,33,56,79,119,120,126,131,138,139,141,142,143,144,147,148,],[15,15,-3,-4,-5,-6,-10,-11,-12,-14,-22,-23,-24,-29,-2,-13,-16,-15,-19,-25,15,-7,15,-17,-18,-27,-26,-28,15,15,-30,]),'CONSOLE':([0,2,3,4,5,6,7,8,9,11,12,13,14,21,25,26,33,56,79,119,120,126,131,138,139,141,142,143,144,147,148,],[17,17,-3,-4,-5,-6,-10,-11,-12,-14,-22,-23,-24,-29,-2,-13,-16,-15,-19,-25,17,-7,17,-17,-18,-27,-26,-28,17,17,-30,]),'ID':([0,2,3,4,5,6,7,8,9,11,12,13,14,15,18,19,21,22,23,24,25,26,28,29,33,35,37,45,46,48,55,56,57,58,60,61,62,63,64,65,66,67,68,69,70,72,76,79,81,82,104,105,112,113,116,119,120,122,123,126,129,131,133,137,138,139,141,142,143,144,147,148,],[16,16,-3,-4,-5,-6,-10,-11,-12,-14,-22,-23,-24,27,31,43,-29,47,-20,-21,-2,-13,43,43,-16,43,43,74,43,77,83,-15,43,43,43,43,43,43,43,43,43,43,43,43,43,102,43,-19,43,43,117,43,83,125,43,-25,16,43,83,-7,43,16,83,83,-17,-18,-27,-26,-28,16,16,-30,]),'RETURN':([0,2,3,4,5,6,7,8,9,11,12,13,14,21,25,26,33,56,79,119,120,126,131,138,139,141,142,143,144,147,148,],[19,19,-3,-4,-5,-6,-10,-11,-12,-14,-22,-23,-24,-29,-2,-13,-16,-15,-19,-25,19,-7,19,-17,-18,-27,-26,-28,19,19,-30,]),'IF':([0,2,3,4,5,6,7,8,9,11,12,13,14,21,25,26,33,56,79,119,120,126,130,131,138,139,141,142,143,144,147,148,],[20,20,-3,-4,-5,-6,-10,-11,-12,-14,-22,-23,-24,-29,-2,-13,-16,-15,-19,-25,20,-7,20,20,-17,-18,-27,-26,-28,20,20,-30,]),'WHILE':([0,2,3,4,5,6,7,8,9,11,12,13,14,21,25,26,33,56,79,119,120,126,131,138,139,141,142,143,144,147,148,],[21,21,-3,-4,-5,-6,-10,-11,-12,-14,-22,-23,-24,-29,-2,-13,-16,-15,-19,-25,21,-7,21,-17,-18,-27,-26,-28,21,21,-30,]),'FUNCTION':([0,2,3,4,5,6,7,8,9,11,12,13,14,21,25,26,33,56,79,119,120,126,131,138,139,141,142,143,144,147,148,],[22,22,-3,-4,-5,-6,-10,-11,-12,-14,-22,-23,-24,-29,-2,-13,-16,-15,-19,-25,22,-7,22,-17,-18,-27,-26,-28,22,22,-30,]),'CONST':([0,2,3,4,5,6,7,8,9,11,12,13,14,21,25,26,33,56,79,119,120,126,131,138,139,141,142,143,144,147,148,],[23,23,-3,-4,-5,-6,-10,-11,-12,-14,-22,-23,-24,-29,-2,-13,-16,-15,-19,-25,23,-7,23,-17,-18,-27,-26,-28,23,23,-30,]),'VAR':([0,2,3,4,5,6,7,8,9,11,12,13,14,21,25,26,33,56,79,119,120,126,131,138,139,141,142,143,144,147,148,],[24,24,-3,-4,-5,-6,-10,-11,-12,-14,-22,-23,-24,-29,-2,-13,-16,-15,-19,-25,24,-7,24,-17,-18,-27,-26,-28,24,24,-30,]),'$end':([1,2,3,4,5,6,7,8,9,11,12,13,14,21,25,26,33,56,79,119,126,138,139,141,142,143,148,],[0,-1,-3,-4,-5,-6,-10,-11,-12,-14,-22,-23,-24,-29,-2,-13,-16,-15,-19,-25,-7,-17,-18,-27,-26,-28,-30,]),'LLAVE_C':([3,4,5,6,7,8,9,11,12,13,14,21,25,26,33,34,36,38,39,40,41,42,43,44,56,59,71,73,79,80,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,113,118,119,126,131,138,139,140,141,142,143,147,148,],[-3,-4,-5,-6,-10,-11,-12,-14,-22,-23,-24,-29,-2,-13,-16,-41,-48,-55,-56,-57,-58,-59,-60,-61,-15,-40,-49,103,-19,-66,-38,-39,-42,-43,-44,-45,-46,-47,-50,-51,-52,-53,-54,-63,-62,126,-65,-25,-7,143,-17,-18,-64,-27,-26,-28,148,-30,]),'SEMICOLON':([10,19,32,34,36,38,39,40,41,42,43,44,49,59,71,78,80,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,112,124,127,128,137,146,],[26,33,56,-41,-48,-55,-56,-57,-58,-59,-60,-61,79,-40,-49,113,-66,-74,-71,-72,-73,-75,-38,-39,-42,-43,-44,-45,-46,-47,-50,-51,-52,-53,-54,-63,-62,-76,-9,138,139,-76,-8,]),'ASIG':([16,55,83,84,85,86,87,88,],[28,-76,-74,116,-71,-72,-73,-75,]),'LPAREN':([16,20,43,47,54,],[29,46,29,76,82,]),'DOT':([17,43,],[30,72,]),'NOT':([19,28,29,46,76,81,82,105,116,122,129,],[35,35,35,35,35,35,35,35,35,35,35,]),'MINUS':([19,28,29,35,36,37,38,39,40,41,42,43,44,46,57,58,60,61,62,63,64,65,66,67,68,69,70,71,76,80,81,82,91,92,93,94,95,96,97,98,99,100,101,102,103,105,116,122,129,],[37,37,37,37,67,37,-55,-56,-57,-58,-59,-60,-61,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-49,37,-66,37,37,67,67,67,67,67,67,-50,-51,-52,-53,-54,-63,-62,37,37,37,37,]),'TNUMBER':([19,28,29,35,37,46,57,58,60,61,62,63,64,65,66,67,68,69,70,76,81,82,105,116,122,129,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'TSTRING':([19,28,29,35,37,46,57,58,60,61,62,63,64,65,66,67,68,69,70,76,81,82,105,116,122,129,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'TRUE':([19,28,29,35,37,46,57,58,60,61,62,63,64,65,66,67,68,69,70,76,81,82,105,116,122,129,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'FALSE':([19,28,29,35,37,46,57,58,60,61,62,63,64,65,66,67,68,69,70,76,81,82,105,116,122,129,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'LLAVE_A':([19,27,28,29,35,37,46,57,58,60,61,62,63,64,65,66,67,68,69,70,76,81,82,83,85,86,87,88,105,106,116,121,122,129,130,132,133,134,145,],[45,48,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,-74,-71,-72,-73,-75,45,120,45,-76,45,45,120,144,-76,-37,-36,]),'RPAREN':([29,34,36,38,39,40,41,42,43,44,50,51,52,53,59,71,75,76,80,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,107,108,109,110,114,115,123,135,136,],[-76,-41,-48,-55,-56,-57,-58,-59,-60,-61,80,-67,-68,-70,-40,-49,106,-76,-66,-74,-71,-72,-73,-75,-38,-39,-42,-43,-44,-45,-46,-47,-50,-51,-52,-53,-54,-63,-62,121,-31,-32,-34,-69,127,-76,-33,-35,]),'LOG':([30,],[54,]),'COLON':([31,34,36,38,39,40,41,42,43,44,59,71,74,77,80,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,111,117,121,125,],[55,-41,-48,-55,-56,-57,-58,-59,-60,-61,-40,-49,105,112,-66,-38,-39,-42,-43,-44,-45,-46,-47,-50,-51,-52,-53,-54,-63,-62,123,129,133,137,]),'AND':([34,36,38,39,40,41,42,43,44,71,80,91,92,93,94,95,96,97,98,99,100,101,102,103,],[57,-48,-55,-56,-57,-58,-59,-60,-61,-49,-66,-42,-43,-44,-45,-46,-47,-50,-51,-52,-53,-54,-63,-62,]),'OR':([34,36,38,39,40,41,42,43,44,71,80,91,92,93,94,95,96,97,98,99,100,101,102,103,],[58,-48,-55,-56,-57,-58,-59,-60,-61,-49,-66,-42,-43,-44,-45,-46,-47,-50,-51,-52,-53,-54,-63,-62,]),'COMA':([34,36,38,39,40,41,42,43,44,51,53,59,71,73,80,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,108,110,114,118,123,135,136,140,],[-41,-48,-55,-56,-57,-58,-59,-60,-61,81,-70,-40,-49,104,-66,-74,-71,-72,-73,-75,-38,-39,-42,-43,-44,-45,-46,-47,-50,-51,-52,-53,-54,-63,-62,122,-34,-69,-65,-76,-33,-35,-64,]),'MAYOR':([36,38,39,40,41,42,43,44,71,80,97,98,99,100,101,102,103,],[60,-55,-56,-57,-58,-59,-60,-61,-49,-66,-50,-51,-52,-53,-54,-63,-62,]),'MENOR':([36,38,39,40,41,42,43,44,71,80,97,98,99,100,101,102,103,],[61,-55,-56,-57,-58,-59,-60,-61,-49,-66,-50,-51,-52,-53,-54,-63,-62,]),'MAYORI':([36,38,39,40,41,42,43,44,71,80,97,98,99,100,101,102,103,],[62,-55,-56,-57,-58,-59,-60,-61,-49,-66,-50,-51,-52,-53,-54,-63,-62,]),'MENORI':([36,38,39,40,41,42,43,44,71,80,97,98,99,100,101,102,103,],[63,-55,-56,-57,-58,-59,-60,-61,-49,-66,-50,-51,-52,-53,-54,-63,-62,]),'IGUAL':([36,38,39,40,41,42,43,44,71,80,97,98,99,100,101,102,103,],[64,-55,-56,-57,-58,-59,-60,-61,-49,-66,-50,-51,-52,-53,-54,-63,-62,]),'DIFF':([36,38,39,40,41,42,43,44,71,80,97,98,99,100,101,102,103,],[65,-55,-56,-57,-58,-59,-60,-61,-49,-66,-50,-51,-52,-53,-54,-63,-62,]),'PLUS':([36,38,39,40,41,42,43,44,71,80,91,92,93,94,95,96,97,98,99,100,101,102,103,],[66,-55,-56,-57,-58,-59,-60,-61,-49,-66,66,66,66,66,66,66,-50,-51,-52,-53,-54,-63,-62,]),'TIMES':([36,38,39,40,41,42,43,44,71,80,91,92,93,94,95,96,97,98,99,100,101,102,103,],[68,-55,-56,-57,-58,-59,-60,-61,-49,-66,68,68,68,68,68,68,68,68,-52,-53,-54,-63,-62,]),'DIVIDE':([36,38,39,40,41,42,43,44,71,80,91,92,93,94,95,96,97,98,99,100,101,102,103,],[69,-55,-56,-57,-58,-59,-60,-61,-49,-66,69,69,69,69,69,69,69,69,-52,-53,-54,-63,-62,]),'MODULE':([36,38,39,40,41,42,43,44,71,80,91,92,93,94,95,96,97,98,99,100,101,102,103,],[70,-55,-56,-57,-58,-59,-60,-61,-49,-66,70,70,70,70,70,70,70,70,-52,-53,-54,-63,-62,]),'STRING':([55,112,123,133,137,],[85,85,85,85,85,]),'NUMBER':([55,112,123,133,137,],[86,86,86,86,86,]),'BOOLEAN':([55,112,123,133,137,],[87,87,87,87,87,]),'ELSE':([119,143,],[130,-28,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones':([0,120,144,],[2,131,147,]),'instruccion':([0,2,120,131,144,147,],[3,25,3,25,3,25,]),'instruccion_inline':([0,2,120,131,144,147,],[4,4,4,4,4,4,]),'instruccion_bloque':([0,2,120,131,144,147,],[5,5,5,5,5,5,]),'interface_definition':([0,2,120,131,144,147,],[6,6,6,6,6,6,]),'print':([0,2,120,131,144,147,],[7,7,7,7,7,7,]),'declare':([0,2,120,131,144,147,],[8,8,8,8,8,8,]),'asignacion':([0,2,120,131,144,147,],[9,9,9,9,9,9,]),'llamada':([0,2,19,28,29,35,37,46,57,58,60,61,62,63,64,65,66,67,68,69,70,76,81,82,105,116,120,122,129,131,144,147,],[10,10,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,10,44,44,10,10,10,]),'retorno':([0,2,120,131,144,147,],[11,11,11,11,11,11,]),'instruccion_if':([0,2,120,130,131,144,147,],[12,12,12,142,12,12,12,]),'instruccion_while':([0,2,120,131,144,147,],[13,13,13,13,13,13,]),'declaracion_funcion':([0,2,120,131,144,147,],[14,14,14,14,14,14,]),'tipo_declaracion':([0,2,120,131,144,147,],[18,18,18,18,18,18,]),'expresion_logica':([19,28,29,46,76,81,82,105,116,122,129,],[32,49,53,75,111,114,115,118,128,111,140,]),'expresion_relacional':([19,28,29,35,46,57,58,76,81,82,105,116,122,129,],[34,34,34,59,34,89,90,34,34,34,34,34,34,34,]),'expresion_numerica':([19,28,29,35,37,46,57,58,60,61,62,63,64,65,66,67,68,69,70,76,81,82,105,116,122,129,],[36,36,36,36,71,36,36,36,91,92,93,94,95,96,97,98,99,100,101,36,36,36,36,36,36,36,]),'terminal':([19,28,29,35,37,46,57,58,60,61,62,63,64,65,66,67,68,69,70,76,81,82,105,116,122,129,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'args':([29,],[50,]),'lexpresiones':([29,],[51,]),'empty':([29,55,76,112,121,123,133,137,],[52,88,109,88,134,88,88,88,]),'lvalues':([45,],[73,]),'interface_props':([48,],[78,]),'tipo_dato':([55,112,123,133,137,],[84,124,136,145,146,]),'params':([76,],[107,]),'lparams':([76,],[108,]),'param':([76,122,],[110,135,]),'ifAux':([106,130,],[119,141,]),'fretorno':([121,],[132,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instrucciones','init',1,'p_init','gramatica.py',170),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones','gramatica.py',185),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones','gramatica.py',186),
  ('instruccion -> instruccion_inline','instruccion',1,'p_instruccion','gramatica.py',195),
  ('instruccion -> instruccion_bloque','instruccion',1,'p_instruccion','gramatica.py',196),
  ('instruccion -> interface_definition','instruccion',1,'p_instruccion','gramatica.py',197),
  ('interface_definition -> INTERFACE ID LLAVE_A interface_props SEMICOLON LLAVE_C','interface_definition',6,'p_interface_definition','gramatica.py',201),
  ('interface_props -> interface_props SEMICOLON ID COLON tipo_dato','interface_props',5,'p_interface_props','gramatica.py',205),
  ('interface_props -> ID COLON tipo_dato','interface_props',3,'p_interface_props','gramatica.py',206),
  ('instruccion_inline -> print','instruccion_inline',1,'p_instruccion_inline','gramatica.py',215),
  ('instruccion_inline -> declare','instruccion_inline',1,'p_instruccion_inline','gramatica.py',216),
  ('instruccion_inline -> asignacion','instruccion_inline',1,'p_instruccion_inline','gramatica.py',217),
  ('instruccion_inline -> llamada SEMICOLON','instruccion_inline',2,'p_instruccion_inline','gramatica.py',218),
  ('instruccion_inline -> retorno','instruccion_inline',1,'p_instruccion_inline','gramatica.py',219),
  ('retorno -> RETURN expresion_logica SEMICOLON','retorno',3,'p_retorno','gramatica.py',224),
  ('retorno -> RETURN SEMICOLON','retorno',2,'p_retorno','gramatica.py',225),
  ('print -> CONSOLE DOT LOG LPAREN expresion_logica RPAREN SEMICOLON','print',7,'p_print','gramatica.py',233),
  ('declare -> tipo_declaracion ID COLON tipo_dato ASIG expresion_logica SEMICOLON','declare',7,'p_declare','gramatica.py',239),
  ('asignacion -> ID ASIG expresion_logica SEMICOLON','asignacion',4,'p_asignacion','gramatica.py',243),
  ('tipo_declaracion -> CONST','tipo_declaracion',1,'p_tipo_declaracion','gramatica.py',248),
  ('tipo_declaracion -> VAR','tipo_declaracion',1,'p_tipo_declaracion','gramatica.py',249),
  ('instruccion_bloque -> instruccion_if','instruccion_bloque',1,'p_instruccion_bloque','gramatica.py',256),
  ('instruccion_bloque -> instruccion_while','instruccion_bloque',1,'p_instruccion_bloque','gramatica.py',257),
  ('instruccion_bloque -> declaracion_funcion','instruccion_bloque',1,'p_instruccion_bloque','gramatica.py',258),
  ('instruccion_if -> IF LPAREN expresion_logica RPAREN ifAux','instruccion_if',5,'p_instruccion_if','gramatica.py',263),
  ('instruccion_if -> IF LPAREN expresion_logica RPAREN ifAux ELSE instruccion_if','instruccion_if',7,'p_instruccion_if','gramatica.py',264),
  ('instruccion_if -> IF LPAREN expresion_logica RPAREN ifAux ELSE ifAux','instruccion_if',7,'p_instruccion_if','gramatica.py',265),
  ('ifAux -> LLAVE_A instrucciones LLAVE_C','ifAux',3,'p_ifAux','gramatica.py',279),
  ('instruccion_while -> WHILE','instruccion_while',1,'p_while','gramatica.py',284),
  ('declaracion_funcion -> FUNCTION ID LPAREN params RPAREN fretorno LLAVE_A instrucciones LLAVE_C','declaracion_funcion',9,'p_declaracion_funcion','gramatica.py',287),
  ('params -> lparams','params',1,'p_params','gramatica.py',292),
  ('params -> empty','params',1,'p_params','gramatica.py',293),
  ('lparams -> lparams COMA param','lparams',3,'p_lparams','gramatica.py',300),
  ('lparams -> param','lparams',1,'p_lparams','gramatica.py',301),
  ('param -> expresion_logica COLON tipo_dato','param',3,'p_param','gramatica.py',310),
  ('fretorno -> COLON tipo_dato','fretorno',2,'p_fretorno','gramatica.py',316),
  ('fretorno -> empty','fretorno',1,'p_fretorno','gramatica.py',317),
  ('expresion_logica -> expresion_relacional AND expresion_relacional','expresion_logica',3,'p_expresion_logica','gramatica.py',325),
  ('expresion_logica -> expresion_relacional OR expresion_relacional','expresion_logica',3,'p_expresion_logica','gramatica.py',326),
  ('expresion_logica -> NOT expresion_relacional','expresion_logica',2,'p_expresion_logica','gramatica.py',327),
  ('expresion_logica -> expresion_relacional','expresion_logica',1,'p_expresion_logica','gramatica.py',328),
  ('expresion_relacional -> expresion_numerica MAYOR expresion_numerica','expresion_relacional',3,'p_expresion_relacional','gramatica.py',339),
  ('expresion_relacional -> expresion_numerica MENOR expresion_numerica','expresion_relacional',3,'p_expresion_relacional','gramatica.py',340),
  ('expresion_relacional -> expresion_numerica MAYORI expresion_numerica','expresion_relacional',3,'p_expresion_relacional','gramatica.py',341),
  ('expresion_relacional -> expresion_numerica MENORI expresion_numerica','expresion_relacional',3,'p_expresion_relacional','gramatica.py',342),
  ('expresion_relacional -> expresion_numerica IGUAL expresion_numerica','expresion_relacional',3,'p_expresion_relacional','gramatica.py',343),
  ('expresion_relacional -> expresion_numerica DIFF expresion_numerica','expresion_relacional',3,'p_expresion_relacional','gramatica.py',344),
  ('expresion_relacional -> expresion_numerica','expresion_relacional',1,'p_expresion_relacional','gramatica.py',345),
  ('expresion_numerica -> MINUS expresion_numerica','expresion_numerica',2,'p_expresion','gramatica.py',353),
  ('expresion_numerica -> expresion_numerica PLUS expresion_numerica','expresion_numerica',3,'p_expresion','gramatica.py',354),
  ('expresion_numerica -> expresion_numerica MINUS expresion_numerica','expresion_numerica',3,'p_expresion','gramatica.py',355),
  ('expresion_numerica -> expresion_numerica TIMES expresion_numerica','expresion_numerica',3,'p_expresion','gramatica.py',356),
  ('expresion_numerica -> expresion_numerica DIVIDE expresion_numerica','expresion_numerica',3,'p_expresion','gramatica.py',357),
  ('expresion_numerica -> expresion_numerica MODULE expresion_numerica','expresion_numerica',3,'p_expresion','gramatica.py',358),
  ('expresion_numerica -> terminal','expresion_numerica',1,'p_expresion','gramatica.py',359),
  ('terminal -> TNUMBER','terminal',1,'p_terminal','gramatica.py',369),
  ('terminal -> TSTRING','terminal',1,'p_terminal','gramatica.py',370),
  ('terminal -> TRUE','terminal',1,'p_terminal','gramatica.py',371),
  ('terminal -> FALSE','terminal',1,'p_terminal','gramatica.py',372),
  ('terminal -> ID','terminal',1,'p_terminal','gramatica.py',373),
  ('terminal -> llamada','terminal',1,'p_terminal','gramatica.py',374),
  ('terminal -> LLAVE_A lvalues LLAVE_C','terminal',3,'p_terminal','gramatica.py',375),
  ('terminal -> ID DOT ID','terminal',3,'p_terminal','gramatica.py',376),
  ('lvalues -> lvalues COMA ID COLON expresion_logica','lvalues',5,'p_lvalues','gramatica.py',394),
  ('lvalues -> ID COLON expresion_logica','lvalues',3,'p_lvalues','gramatica.py',395),
  ('llamada -> ID LPAREN args RPAREN','llamada',4,'p_llamada','gramatica.py',403),
  ('args -> lexpresiones','args',1,'p_args','gramatica.py',407),
  ('args -> empty','args',1,'p_args','gramatica.py',408),
  ('lexpresiones -> lexpresiones COMA expresion_logica','lexpresiones',3,'p_lexpresiones','gramatica.py',415),
  ('lexpresiones -> expresion_logica','lexpresiones',1,'p_lexpresiones','gramatica.py',416),
  ('tipo_dato -> STRING','tipo_dato',1,'p_tipo_dato','gramatica.py',426),
  ('tipo_dato -> NUMBER','tipo_dato',1,'p_tipo_dato','gramatica.py',427),
  ('tipo_dato -> BOOLEAN','tipo_dato',1,'p_tipo_dato','gramatica.py',428),
  ('tipo_dato -> ID','tipo_dato',1,'p_tipo_dato','gramatica.py',429),
  ('tipo_dato -> empty','tipo_dato',1,'p_tipo_dato','gramatica.py',430),
  ('empty -> <empty>','empty',0,'p_empty','gramatica.py',444),
]
