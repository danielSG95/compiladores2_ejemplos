
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEMODULErightUMENOSAND ASIG BOOLEAN COLON CONSOLE CONST DIFF DIVIDE DOT ELSE FALSE ID IF IGUAL LLAVE_A LLAVE_C LOG LPAREN MAYOR MAYORI MENOR MENORI MINUS MODULE NOT NUMBER OR PLUS RPAREN SEMICOLON STRING TIMES TNUMBER TRUE TSTRING VAR WHILE init : instrucciones instrucciones : instrucciones instruccion\n    \t\t\t\t| instruccion instruccion : instruccion_inline\n                    | instruccion_bloque  instruccion_inline : print\n                          | declare\n                          | asignacion  print : CONSOLE DOT LOG LPAREN expresion_logica RPAREN SEMICOLON declare : tipo_declaracion ID COLON tipo_dato ASIG expresion_logica SEMICOLON asignacion : ID ASIG expresion_logica SEMICOLON tipo_declaracion : CONST\n    \t\t\t\t\t| VAR instruccion_bloque : instruccion_if\n                            | instruccion_while instruccion_if : IF LPAREN expresion_logica RPAREN ifAux\n                        | IF LPAREN expresion_logica RPAREN ifAux ELSE instruccion_if\n                        | IF LPAREN expresion_logica RPAREN ifAux ELSE ifAux ifAux : LLAVE_A instrucciones LLAVE_C instruccion_while : WHILE expresion_logica : expresion_relacional AND expresion_relacional\n                        | expresion_relacional OR expresion_relacional\n                        | NOT expresion_relacional\n                        | expresion_relacional expresion_relacional : expresion_numerica MAYOR expresion_numerica\n                            | expresion_numerica MENOR expresion_numerica\n                            | expresion_numerica MAYORI expresion_numerica\n                            | expresion_numerica MENORI expresion_numerica\n                            | expresion_numerica IGUAL expresion_numerica\n                            | expresion_numerica DIFF expresion_numerica\n                            | expresion_numerica expresion_numerica : MINUS expresion_numerica %prec UMENOS\n    \t\t\t| expresion_numerica PLUS expresion_numerica\n    \t\t\t| expresion_numerica MINUS expresion_numerica\n\t\t\t\t| expresion_numerica TIMES expresion_numerica\n\t\t\t\t| expresion_numerica DIVIDE expresion_numerica\n\t\t\t\t| expresion_numerica MODULE expresion_numerica\n       \t\t    | terminal terminal : TNUMBER\n    \t\t\t| TSTRING\n    \t\t\t| TRUE\n    \t\t\t| FALSE\n       \t\t    | ID tipo_dato : STRING\n                | NUMBER\n                | BOOLEAN\n                | emptyempty :'
    
_lr_action_items = {'CONSOLE':([0,2,3,4,5,6,7,8,9,10,15,18,43,75,76,80,81,82,83,84,85,],[11,11,-3,-4,-5,-6,-7,-8,-14,-15,-20,-2,-11,-16,11,11,-9,-10,-18,-17,-19,]),'ID':([0,2,3,4,5,6,7,8,9,10,12,15,16,17,18,21,22,28,30,37,43,44,45,47,48,49,50,51,52,53,54,55,56,57,61,75,76,80,81,82,83,84,85,],[13,13,-3,-4,-5,-6,-7,-8,-14,-15,20,-20,-12,-13,-2,25,25,25,25,25,-11,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-16,13,13,-9,-10,-18,-17,-19,]),'IF':([0,2,3,4,5,6,7,8,9,10,15,18,43,75,76,79,80,81,82,83,84,85,],[14,14,-3,-4,-5,-6,-7,-8,-14,-15,-20,-2,-11,-16,14,14,14,-9,-10,-18,-17,-19,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,15,18,43,75,76,80,81,82,83,84,85,],[15,15,-3,-4,-5,-6,-7,-8,-14,-15,-20,-2,-11,-16,15,15,-9,-10,-18,-17,-19,]),'CONST':([0,2,3,4,5,6,7,8,9,10,15,18,43,75,76,80,81,82,83,84,85,],[16,16,-3,-4,-5,-6,-7,-8,-14,-15,-20,-2,-11,-16,16,16,-9,-10,-18,-17,-19,]),'VAR':([0,2,3,4,5,6,7,8,9,10,15,18,43,75,76,80,81,82,83,84,85,],[17,17,-3,-4,-5,-6,-7,-8,-14,-15,-20,-2,-11,-16,17,17,-9,-10,-18,-17,-19,]),'$end':([1,2,3,4,5,6,7,8,9,10,15,18,43,75,81,82,83,84,85,],[0,-1,-3,-4,-5,-6,-7,-8,-14,-15,-20,-2,-11,-16,-9,-10,-18,-17,-19,]),'LLAVE_C':([3,4,5,6,7,8,9,10,15,18,43,75,80,81,82,83,84,85,],[-3,-4,-5,-6,-7,-8,-14,-15,-20,-2,-11,-16,85,-9,-10,-18,-17,-19,]),'DOT':([11,],[19,]),'ASIG':([13,24,38,39,40,41,42,],[21,-48,61,-44,-45,-46,-47,]),'LPAREN':([14,23,],[22,37,]),'LOG':([19,],[23,]),'COLON':([20,],[24,]),'NOT':([21,22,37,61,],[28,28,28,28,]),'MINUS':([21,22,25,28,29,30,31,32,33,34,35,37,44,45,47,48,49,50,51,52,53,54,55,56,57,58,61,64,65,66,67,68,69,70,71,72,73,74,],[30,30,-43,30,54,30,-38,-39,-40,-41,-42,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-32,30,54,54,54,54,54,54,-33,-34,-35,-36,-37,]),'TNUMBER':([21,22,28,30,37,44,45,47,48,49,50,51,52,53,54,55,56,57,61,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'TSTRING':([21,22,28,30,37,44,45,47,48,49,50,51,52,53,54,55,56,57,61,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'TRUE':([21,22,28,30,37,44,45,47,48,49,50,51,52,53,54,55,56,57,61,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'FALSE':([21,22,28,30,37,44,45,47,48,49,50,51,52,53,54,55,56,57,61,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'STRING':([24,],[39,]),'NUMBER':([24,],[40,]),'BOOLEAN':([24,],[41,]),'MAYOR':([25,29,31,32,33,34,35,58,70,71,72,73,74,],[-43,47,-38,-39,-40,-41,-42,-32,-33,-34,-35,-36,-37,]),'MENOR':([25,29,31,32,33,34,35,58,70,71,72,73,74,],[-43,48,-38,-39,-40,-41,-42,-32,-33,-34,-35,-36,-37,]),'MAYORI':([25,29,31,32,33,34,35,58,70,71,72,73,74,],[-43,49,-38,-39,-40,-41,-42,-32,-33,-34,-35,-36,-37,]),'MENORI':([25,29,31,32,33,34,35,58,70,71,72,73,74,],[-43,50,-38,-39,-40,-41,-42,-32,-33,-34,-35,-36,-37,]),'IGUAL':([25,29,31,32,33,34,35,58,70,71,72,73,74,],[-43,51,-38,-39,-40,-41,-42,-32,-33,-34,-35,-36,-37,]),'DIFF':([25,29,31,32,33,34,35,58,70,71,72,73,74,],[-43,52,-38,-39,-40,-41,-42,-32,-33,-34,-35,-36,-37,]),'PLUS':([25,29,31,32,33,34,35,58,64,65,66,67,68,69,70,71,72,73,74,],[-43,53,-38,-39,-40,-41,-42,-32,53,53,53,53,53,53,-33,-34,-35,-36,-37,]),'TIMES':([25,29,31,32,33,34,35,58,64,65,66,67,68,69,70,71,72,73,74,],[-43,55,-38,-39,-40,-41,-42,-32,55,55,55,55,55,55,55,55,-35,-36,-37,]),'DIVIDE':([25,29,31,32,33,34,35,58,64,65,66,67,68,69,70,71,72,73,74,],[-43,56,-38,-39,-40,-41,-42,-32,56,56,56,56,56,56,56,56,-35,-36,-37,]),'MODULE':([25,29,31,32,33,34,35,58,64,65,66,67,68,69,70,71,72,73,74,],[-43,57,-38,-39,-40,-41,-42,-32,57,57,57,57,57,57,57,57,-35,-36,-37,]),'AND':([25,27,29,31,32,33,34,35,58,64,65,66,67,68,69,70,71,72,73,74,],[-43,44,-31,-38,-39,-40,-41,-42,-32,-25,-26,-27,-28,-29,-30,-33,-34,-35,-36,-37,]),'OR':([25,27,29,31,32,33,34,35,58,64,65,66,67,68,69,70,71,72,73,74,],[-43,45,-31,-38,-39,-40,-41,-42,-32,-25,-26,-27,-28,-29,-30,-33,-34,-35,-36,-37,]),'SEMICOLON':([25,26,27,29,31,32,33,34,35,46,58,62,63,64,65,66,67,68,69,70,71,72,73,74,77,78,],[-43,43,-24,-31,-38,-39,-40,-41,-42,-23,-32,-21,-22,-25,-26,-27,-28,-29,-30,-33,-34,-35,-36,-37,81,82,]),'RPAREN':([25,27,29,31,32,33,34,35,36,46,58,60,62,63,64,65,66,67,68,69,70,71,72,73,74,],[-43,-24,-31,-38,-39,-40,-41,-42,59,-23,-32,77,-21,-22,-25,-26,-27,-28,-29,-30,-33,-34,-35,-36,-37,]),'LLAVE_A':([59,79,],[76,76,]),'ELSE':([75,85,],[79,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones':([0,76,],[2,80,]),'instruccion':([0,2,76,80,],[3,18,3,18,]),'instruccion_inline':([0,2,76,80,],[4,4,4,4,]),'instruccion_bloque':([0,2,76,80,],[5,5,5,5,]),'print':([0,2,76,80,],[6,6,6,6,]),'declare':([0,2,76,80,],[7,7,7,7,]),'asignacion':([0,2,76,80,],[8,8,8,8,]),'instruccion_if':([0,2,76,79,80,],[9,9,9,84,9,]),'instruccion_while':([0,2,76,80,],[10,10,10,10,]),'tipo_declaracion':([0,2,76,80,],[12,12,12,12,]),'expresion_logica':([21,22,37,61,],[26,36,60,78,]),'expresion_relacional':([21,22,28,37,44,45,61,],[27,27,46,27,62,63,27,]),'expresion_numerica':([21,22,28,30,37,44,45,47,48,49,50,51,52,53,54,55,56,57,61,],[29,29,29,58,29,29,29,64,65,66,67,68,69,70,71,72,73,74,29,]),'terminal':([21,22,28,30,37,44,45,47,48,49,50,51,52,53,54,55,56,57,61,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'tipo_dato':([24,],[38,]),'empty':([24,],[42,]),'ifAux':([59,79,],[75,83,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instrucciones','init',1,'p_init','gramatica.py',157),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones','gramatica.py',162),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones','gramatica.py',163),
  ('instruccion -> instruccion_inline','instruccion',1,'p_instruccion','gramatica.py',172),
  ('instruccion -> instruccion_bloque','instruccion',1,'p_instruccion','gramatica.py',173),
  ('instruccion_inline -> print','instruccion_inline',1,'p_instruccion_inline','gramatica.py',178),
  ('instruccion_inline -> declare','instruccion_inline',1,'p_instruccion_inline','gramatica.py',179),
  ('instruccion_inline -> asignacion','instruccion_inline',1,'p_instruccion_inline','gramatica.py',180),
  ('print -> CONSOLE DOT LOG LPAREN expresion_logica RPAREN SEMICOLON','print',7,'p_print','gramatica.py',185),
  ('declare -> tipo_declaracion ID COLON tipo_dato ASIG expresion_logica SEMICOLON','declare',7,'p_declare','gramatica.py',191),
  ('asignacion -> ID ASIG expresion_logica SEMICOLON','asignacion',4,'p_asignacion','gramatica.py',195),
  ('tipo_declaracion -> CONST','tipo_declaracion',1,'p_tipo_declaracion','gramatica.py',200),
  ('tipo_declaracion -> VAR','tipo_declaracion',1,'p_tipo_declaracion','gramatica.py',201),
  ('instruccion_bloque -> instruccion_if','instruccion_bloque',1,'p_instruccion_bloque','gramatica.py',208),
  ('instruccion_bloque -> instruccion_while','instruccion_bloque',1,'p_instruccion_bloque','gramatica.py',209),
  ('instruccion_if -> IF LPAREN expresion_logica RPAREN ifAux','instruccion_if',5,'p_instruccion_if','gramatica.py',214),
  ('instruccion_if -> IF LPAREN expresion_logica RPAREN ifAux ELSE instruccion_if','instruccion_if',7,'p_instruccion_if','gramatica.py',215),
  ('instruccion_if -> IF LPAREN expresion_logica RPAREN ifAux ELSE ifAux','instruccion_if',7,'p_instruccion_if','gramatica.py',216),
  ('ifAux -> LLAVE_A instrucciones LLAVE_C','ifAux',3,'p_ifAux','gramatica.py',229),
  ('instruccion_while -> WHILE','instruccion_while',1,'p_while','gramatica.py',233),
  ('expresion_logica -> expresion_relacional AND expresion_relacional','expresion_logica',3,'p_expresion_logica','gramatica.py',237),
  ('expresion_logica -> expresion_relacional OR expresion_relacional','expresion_logica',3,'p_expresion_logica','gramatica.py',238),
  ('expresion_logica -> NOT expresion_relacional','expresion_logica',2,'p_expresion_logica','gramatica.py',239),
  ('expresion_logica -> expresion_relacional','expresion_logica',1,'p_expresion_logica','gramatica.py',240),
  ('expresion_relacional -> expresion_numerica MAYOR expresion_numerica','expresion_relacional',3,'p_expresion_relacional','gramatica.py',250),
  ('expresion_relacional -> expresion_numerica MENOR expresion_numerica','expresion_relacional',3,'p_expresion_relacional','gramatica.py',251),
  ('expresion_relacional -> expresion_numerica MAYORI expresion_numerica','expresion_relacional',3,'p_expresion_relacional','gramatica.py',252),
  ('expresion_relacional -> expresion_numerica MENORI expresion_numerica','expresion_relacional',3,'p_expresion_relacional','gramatica.py',253),
  ('expresion_relacional -> expresion_numerica IGUAL expresion_numerica','expresion_relacional',3,'p_expresion_relacional','gramatica.py',254),
  ('expresion_relacional -> expresion_numerica DIFF expresion_numerica','expresion_relacional',3,'p_expresion_relacional','gramatica.py',255),
  ('expresion_relacional -> expresion_numerica','expresion_relacional',1,'p_expresion_relacional','gramatica.py',256),
  ('expresion_numerica -> MINUS expresion_numerica','expresion_numerica',2,'p_expresion','gramatica.py',264),
  ('expresion_numerica -> expresion_numerica PLUS expresion_numerica','expresion_numerica',3,'p_expresion','gramatica.py',265),
  ('expresion_numerica -> expresion_numerica MINUS expresion_numerica','expresion_numerica',3,'p_expresion','gramatica.py',266),
  ('expresion_numerica -> expresion_numerica TIMES expresion_numerica','expresion_numerica',3,'p_expresion','gramatica.py',267),
  ('expresion_numerica -> expresion_numerica DIVIDE expresion_numerica','expresion_numerica',3,'p_expresion','gramatica.py',268),
  ('expresion_numerica -> expresion_numerica MODULE expresion_numerica','expresion_numerica',3,'p_expresion','gramatica.py',269),
  ('expresion_numerica -> terminal','expresion_numerica',1,'p_expresion','gramatica.py',270),
  ('terminal -> TNUMBER','terminal',1,'p_terminal','gramatica.py',280),
  ('terminal -> TSTRING','terminal',1,'p_terminal','gramatica.py',281),
  ('terminal -> TRUE','terminal',1,'p_terminal','gramatica.py',282),
  ('terminal -> FALSE','terminal',1,'p_terminal','gramatica.py',283),
  ('terminal -> ID','terminal',1,'p_terminal','gramatica.py',284),
  ('tipo_dato -> STRING','tipo_dato',1,'p_tipo_dato','gramatica.py',298),
  ('tipo_dato -> NUMBER','tipo_dato',1,'p_tipo_dato','gramatica.py',299),
  ('tipo_dato -> BOOLEAN','tipo_dato',1,'p_tipo_dato','gramatica.py',300),
  ('tipo_dato -> empty','tipo_dato',1,'p_tipo_dato','gramatica.py',301),
  ('empty -> <empty>','empty',0,'p_empty','gramatica.py',313),
]
